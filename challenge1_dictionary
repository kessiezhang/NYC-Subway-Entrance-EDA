{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Topic:        Challenge Set 1\n",
    "Subject:      Explore MTA turnstile data\n",
    "Date:         xx/xx/xxxx\n",
    "Name:         student name\n",
    "Worked with:  other students' name\n",
    "Location:     nyc17_ds10/student_submissions/challenges/01-mta/shaikh_reshama/challenge_set_1_reshama.ipynb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Python Version: 3.7.3 (default, Mar 27 2019, 16:54:48) \n",
      "[Clang 4.0.1 (tags/RELEASE_401/final)]\n"
     ]
    }
   ],
   "source": [
    "import sys\n",
    "print(\"Python Version:\", sys.version)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Challenge 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [],
   "source": [
    "import csv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 271,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['A002',\n",
       " 'R051',\n",
       " '02-00-00',\n",
       " '59 ST',\n",
       " 'NQR456W',\n",
       " 'BMT',\n",
       " '12/29/2018',\n",
       " '03:00:00',\n",
       " 'REGULAR',\n",
       " '0006889287',\n",
       " '0002335920                                            ']"
      ]
     },
     "execution_count": 271,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "with open('/Users/james/Downloads/Jan05-19.txt') as f:\n",
    "    reader = csv.reader(f)\n",
    "    lst = list(reader)[1:]\n",
    "lst[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 272,
   "metadata": {},
   "outputs": [],
   "source": [
    "# mta_dict = {tuple(sublist[:4]):[sublist[4:]] for sublist in lst}\n",
    "# mta_dict    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pprint\n",
    "mta_dict1 = {}\n",
    "for sublist in lst:\n",
    "    key = tuple(sublist[:4])\n",
    "    value = [text.strip(' ') for text in sublist[4:]]\n",
    "    if key in mta_dict1.keys():\n",
    "        mta_dict1[key].append(value)\n",
    "    else:\n",
    "        mta_dict1[key] = [value]\n",
    "pprint.pprint(mta_dict1)\n",
    "# 2,3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3\n"
     ]
    }
   ],
   "source": [
    "print(len(mta_dict2.keys()))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Challenge 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 238,
   "metadata": {},
   "outputs": [],
   "source": [
    "from datetime import datetime\n",
    "mta_dict_4hrs = {}\n",
    "for key in mta_dict1.keys():\n",
    "    for i, sublist in enumerate(mta_dict1[key]):\n",
    "        if key not in mta_dict_4hrs.keys():\n",
    "            mta_dict_4hrs[key] = [[datetime.strptime('/'.join([sublist[2], sublist[3]]), '%m/%d/%Y/%H:%M:%S'), 0]]\n",
    "        else:\n",
    "            curr_count = int(mta_dict1[key][i][5].lstrip('0'))  # l.strip required to remove leading zeros\n",
    "            prev_count = int(mta_dict1[key][i-1][5].lstrip('0'))  # l.strip required to remove leading zeros\n",
    "            diff = curr_count - prev_count  \n",
    "            mta_dict_4hrs[key].append([datetime.strptime('/'.join([sublist[2], sublist[3]]), '%m/%d/%Y/%H:%M:%S'), diff])\n",
    "\n",
    "# mta_dict_4hrs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Challenge 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 270,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{('A002', 'R051', '02-00-00', '59 ST', '2018/12/29'): 899,\n",
       " ('A002', 'R051', '02-00-00', '59 ST', '2018/12/30'): 664,\n",
       " ('A002', 'R051', '02-00-00', '59 ST', '2018/12/31'): 1012,\n",
       " ('A002', 'R051', '02-00-00', '59 ST', '2019/01/01'): 447,\n",
       " ('A002', 'R051', '02-00-00', '59 ST', '2019/01/02'): 1442,\n",
       " ('A002', 'R051', '02-00-00', '59 ST', '2019/01/03'): 1506,\n",
       " ('A002', 'R051', '02-00-00', '59 ST', '2019/01/04'): 1512,\n",
       " ('A002', 'R051', '02-00-01', '59 ST', '2018/12/29'): 752,\n",
       " ('A002', 'R051', '02-00-01', '59 ST', '2018/12/30'): 635,\n",
       " ('A002', 'R051', '02-00-01', '59 ST', '2018/12/31'): 776,\n",
       " ('A002', 'R051', '02-00-01', '59 ST', '2019/01/01'): 439,\n",
       " ('A002', 'R051', '02-00-01', '59 ST', '2019/01/02'): 1167,\n",
       " ('A002', 'R051', '02-00-01', '59 ST', '2019/01/03'): 1218,\n",
       " ('A002', 'R051', '02-00-01', '59 ST', '2019/01/04'): 1225,\n",
       " ('A002', 'R051', '02-03-00', '59 ST', '2018/12/29'): 329,\n",
       " ('A002', 'R051', '02-03-00', '59 ST', '2018/12/30'): 293,\n",
       " ('A002', 'R051', '02-03-00', '59 ST', '2018/12/31'): 142}"
      ]
     },
     "execution_count": 270,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mta_dict_daily_entries = {}\n",
    "for key in mta_dict_4hrs.keys():\n",
    "    for i, sublist in enumerate(mta_dict_4hrs[key]):\n",
    "        list_key = list(key) + [datetime.strftime(mta_dict_4hrs[key][i][0], '%Y/%m/%d')]\n",
    "        new_key = tuple(list_key)\n",
    "        if new_key not in mta_dict_daily_entries.keys():\n",
    "            mta_dict_daily_entries[new_key] = 0\n",
    "        else:\n",
    "            mta_dict_daily_entries[new_key] += mta_dict_4hrs[key][i][1]\n",
    "mta_dict_daily_entries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "REMEMBER TO CHANGE NUMBER OF ROW DATA IN BEGINNING"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "metis",
   "language": "python",
   "name": "metis"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
